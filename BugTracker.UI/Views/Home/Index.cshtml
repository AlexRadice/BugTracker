@{
    ViewData["Title"] = "Home Page";
}

@section Scripts {
    <script>
        $(function() {
            var bugs = [],
                editingBug = null,
                $bugstable = $('#bugstable'),
                $editor = $('#editor'),
                $title,
                $description;

            var formatDate = function() {
                var d = new Date(),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2) month = '0' + month;
                if (day.length < 2) day = '0' + day;

                return [year, month, day].join('-');
            }

            var refreshTable = function() {
                var tbody = $bugstable.find('tbody');
                tbody.empty();
                tbody.append(bugs.filter(function(bug) {
                    return !bug.dateClosed;
                }).map(function(bug) {
                    return ('<tr><td class="non-text">' +
                        bug.id +
                        '</td><td><a class="editbug" href="' +
                        bug.id +
                        '">' +
                        bug.title +
                        '</a></td><td>' +
                        ((bug.assignedToUser && bug.assignedToUser.name) || 'Unassigned') +
                        '</td><td>' +
                        (bug.dateClosed ? 'Closed' : 'Open') +
                        '</td><td class="non-text"><button class="btn btn-default closebug" data-id="' +
                        bug.id +
                        '">Close</button></td></tr>'
                    );
                }));
            };

            $.getJSON('/api/bugs',
                function(data, textStatus, jqXhr) {
                    bugs = data;
                    refreshTable();
                });

            $editor.dialog({
                autoOpen: false,
                maxWidth: 500,
                width: 500,
                height: 500
            });
            $title = $('#title');
            $description = $('#description');

            $('#addbug').on('click keydown',
                function() {
                    editingBug = {};
                    $editor.dialog({ title: 'New bug' });
                    $editor.find('input').val('');
                    $description.val('');
                    $editor.find('#dateOpened').text(new Date());
                    $editor.dialog('open');
                });

            $bugstable.on('click keydown',
                'a.editbug',
                function() {
                    var id = parseInt($(this).attr('href'));
                    console.log('Editing ' + id);
                    editingBug = bugs.filter(function(bug) { return bug.id === id; })[0];
                    $editor.dialog({ title: 'Editing bug #' + id });
                    $title.val(editingBug.title);
                    $description.val(editingBug.description);
                    $editor.find('#dateOpened').text(editingBug.dateOpened);
                    $editor.find('#dateClosed').text(editingBug.dateClosed);
                    $editor.dialog('open');
                    return false;
                });

            $('#canceledit').on('click keydown',
                function() {
                    editingBug = null;
                    $editor.dialog('close');
                });

            var saveEditingBug = function(changes) {
                $.ajax('/api/bugs',
                    {
                        method: 'PUT',
                        contentType: 'application/json',
                        dataType: 'text',
                        data: JSON.stringify({
                            id: editingBug.id,
                            title: changes.title,
                            description: changes.description,
                            dateOpened: editingBug.dateOpened,
                            dateClosed: changes.dateClosed,
                            assignedToUser: editingBug.assignedToUser
                        }),
                        success: function() {
                            editingBug.title = changes.title;
                            editingBug.description = changes.description;
                            editingBug.dateClosed = changes.dateClosed;
                            editingBug = null;
                            refreshTable();
                        },
                        error: function() {
                            console.log(arguments.join(','));
                        }
                    });

            };

            $('#savebug').on('click keydown',
                function() {
                    $editor.dialog('close');
                    if (editingBug.id) {
                        saveEditingBug({
                            title: $title.val(),
                            description: $description.val()
                        });
                    } else {
                        editingBug = null;
                        $.ajax('/api/bugs',
                            {
                                method: 'POST',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify({
                                    title: $title.val(),
                                    description: $description.val()
                                }),
                                success: function(jqXhr) {
                                    bugs.push(jqXhr.responseJson);
                                    refreshTable();
                                }
                            });
                    }
                });

            $bugstable.on('click keydown',
                'button.closebug',
                function() {
                    var id = parseInt($(this).attr('data-id'));
                    console.log('Closing ' + id);
                    editingBug = bugs.filter(function(bug) { return bug.id === id; })[0];
                    saveEditingBug({
                        title: editingBug.title,
                        description: editingBug.description,
                        dateClosed: formatDate()
                    });
                });
        });
    </script>
}

<h2>Bugs</h2>

<div class="row">
    <table id="bugstable" class="table table-bordered table-striped">
        <thead>
        <tr><th>#</th><th>Title</th><th>Assigned To</th><th>Status</th><th></th></th></tr>
        </thead>
        <tbody>
        <td class="table-loading">Loading...</td>
        </tbody>
    </table>

    <button id="addbug" class="btn btn-default">Add bug</button>
</div>
<div id="editor" style="display: none; z-index:99">
    <div class="dialog-container">
        <form>
            <div class="row col-5">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" class="form-control" id="title" placeholder="Title">
                </div>
            </div>
            <div class="row col-5">
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea rows="5" class="form-control" id="description" placeholder="Description"></textarea>
                </div>
            </div>
            <div class="row col-5">
                <div class="form-group">
                    <label for="title">Date Opened</label>
                    <p class="form-control-static" id="dateOpened"></p>
                </div>
            </div>
            <div class="row col-5 hidden">
                <div class="form-group">
                    <label for="title">Date Closed</label>
                    <p class="form-control-static" id="dateClosed"></p>
                </div>
            </div>

            <div class="row col-5">
                <button id="savebug" type="button" class="btn btn-default">Save</button> <button id="canceledit" type="button" class="btn">Cancel</button>
            </div>
        </form>
    </div>
</div>