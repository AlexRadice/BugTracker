#pragma checksum "C:\Users\alex.radice\Documents\Visual Studio 2017\Projects\BugTracker\BugTracker.UI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "90d92298f7e82ed2edfa6f2051a0f5b1d07b8764"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\alex.radice\Documents\Visual Studio 2017\Projects\BugTracker\BugTracker.UI\Views\_ViewImports.cshtml"
using BugTracker.UI;

#line default
#line hidden
#line 2 "C:\Users\alex.radice\Documents\Visual Studio 2017\Projects\BugTracker\BugTracker.UI\Views\_ViewImports.cshtml"
using BugTracker.UI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"90d92298f7e82ed2edfa6f2051a0f5b1d07b8764", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cdf00781ea026ea799cbefc0be8a3f4e80380459", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\alex.radice\Documents\Visual Studio 2017\Projects\BugTracker\BugTracker.UI\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(65, 4742, true);
                WriteLiteral(@"
    <script>
        $(function() {
            var bugs = [],
                editingBug = null,
                $bugstable = $('#bugstable'),
                $editor = $('#editor'),
                $title,
                $description;

            var refreshTable = function() {
                var tbody = $bugstable.find('tbody');
                tbody.empty();
                tbody.append(bugs.map(function(bug) {
                    return ('<td>' +
                        bug.id +
                        '</td><td><a class=""editbug"" href=""' +
                        bug.id +
                        '"">' +
                        bug.title +
                        '</a></td><td>' +
                        ((bug.assignedToUser && bug.assignedToUser.name) || 'Unassigned') +
                        '</td><td>' +
                        (bug.dateClosed ? 'Closed' : 'Open') +
                        '</td>'
                    );
                }));
            };

            ");
                WriteLiteral(@"$.getJSON('/api/bugs',
                function(data, textStatus, jqXhr) {
                    bugs = data;
                    refreshTable();
                });

            $editor.dialog({
                autoOpen: false,
                maxWidth: 500,
                width: 500,
                height: 500
            });
            $title = $('#title');
            $description = $('#description');

            $('#addbug').on('click keydown',
                function() {
                    editingBug = {};
                    $editor.dialog({ title: 'New bug' });
                    $editor.find('input').val('');
                    $editor.find('#dateOpened').text(new Date());
                    $editor.dialog('open');
                });

            $bugstable.on('click keydown',
                'a.editbug',
                function() {
                    var id = parseInt($(this).attr('href'));
                    console.log('Editing ' + id);
                    e");
                WriteLiteral(@"ditingBug = bugs.filter(function(bug) { return bug.id === id; })[0];
                    $editor.dialog({ title: 'Editing bug #' + id });
                    $title.val(editingBug.title);
                    $description.val(editingBug.description);
                    $editor.dialog('open');
                    return false;
                });

            $('#canceledit').on('click keydown',
                function() {
                    editingBug = null;
                    $editor.dialog('close');
                });

            $('#savebug').on('click keydown',
                function() {
                    $editor.dialog('close');
                    if (editingBug.id) {
                        $.ajax('/api/bugs',
                            {
                                method: 'PUT',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify({
                ");
                WriteLiteral(@"                    id: editingBug.id,
                                    title: $title.val(),
                                    description: $description.val(),
                                    dateOpened: editingBug.dateOpened,
                                    dateClosed: editingBug.dateClosed,
                                    assignedToUser: editingBug.assignedToUser
                                }),
                                success: function () {
                                    editingBug.title = $title.val();
                                    editingBug.description = $description.val();
                                    editingBug = null;
                                    refreshTable();
                                }
                            });
                    } else {
                        editingBug = null;
                        $.ajax('/api/bugs',
                            {
                                method: 'POST',
            ");
                WriteLiteral(@"                    contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify({
                                    title: $title.val(),
                                    description: $description.val()
                                }),
                                success: function(jqXhr) {
                                    bugs.push(jqXhr.responseJson);
                                    refreshTable();
                                }
                            });
                    }
                });
        });
    </script>
");
                EndContext();
            }
            );
            BeginContext(4810, 495, true);
            WriteLiteral(@"
<h2>Bugs</h2>

<div class=""row"">
    <table id=""bugstable"" class=""table table-bordered table-striped"">
        <thead>
        <tr><th>#</th><th>Title</th><th>Assigned To</th><th>Status</th></tr>
        </thead>
        <tbody>
        <td class=""table-loading"">Loading...</td>
        </tbody>
    </table>

    <button id=""addbug"" class=""btn btn-default"">Add bug</button>
</div>
<div id=""editor"" style=""display: none; z-index:99"">
    <div class=""dialog-container"">
        ");
            EndContext();
            BeginContext(5305, 1325, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "75d9d84c78b4476f8238aa2ee4ac1e3a", async() => {
                BeginContext(5311, 1312, true);
                WriteLiteral(@"
            <div class=""row col-5"">
                <div class=""form-group"">
                    <label for=""title"">Title</label>
                    <input type=""text"" class=""form-control"" id=""title"" placeholder=""Title"">
                </div>
            </div>
            <div class=""row col-5"">
                <div class=""form-group"">
                    <label for=""description"">Description</label>
                    <textarea rows=""5"" class=""form-control"" id=""description"" placeholder=""Description""></textarea>
                </div>
            </div>
            <div class=""row col-5"">
                <div class=""form-group"">
                    <label for=""title"">Date Opened</label>
                    <p class=""form-control-static"" id=""dateOpened""></p>
                </div>
            </div>
            <div class=""row col-5"">
                <div class=""form-group"">
                    <label for=""title"">Date Closed</label>
                    <p class=""form-control-static"" i");
                WriteLiteral(@"d=""dateClosed""></p>
                </div>
            </div>

            <div class=""row col-5"">
                <button id=""savebug"" type=""button"" class=""btn btn-default"">Save</button> <button id=""canceledit"" type=""button"" class=""btn"">Cancel</button>
            </div>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6630, 20, true);
            WriteLiteral("\r\n    </div>\r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
